#!/bin/bash
# DATE:         November 29, 2016
# AUTHOR:	      Roman Kharkovski (http://advantage.ibm.com/about)
# DESCRIPTION:  This script builds MQ Docker image. Read moer details here: http://www.ibm.com/support/knowledgecenter/en/SSFKSJ_9.0.0/com.ibm.mq.con.doc/q114484_.htm

source ../setenv.sh
source server/setenv_mq.sh
source client/setenv_client.sh

echo_my "--> '$BASH_SOURCE' -->" $ECHO_DEBUG
TEMP=temp

##############################################################################
# Generate Dockerfile for the vanilla MQ server image - without my customizations
# Parameters:
#   1 - Path to the file
##############################################################################
createVanillaMQServerDockerfile() {
	echo_my "------> This function creates vanilla server Dockerfile in this directory: $1"
	BACKUP=Dockerfile.`date +%s`.bak
	NEW_FILE=$1/Dockerfile
  #if [ -f "$1/Dockerfile" ]; then mv -f $NEW_FILE $1/$BACKUP; fi

	cat <<EOF >${NEW_FILE}
# © Copyright IBM Corporation 2015, 2016
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0. Unless required by applicable law or agreed
# to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF 
# ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
#
# WARNING: This file is auto-generated by the build.sh script

FROM ubuntu:16.04

# The URL to download the MQ installer from in tar.gz format
ARG MQ_URL=http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/messaging/mqadv/mqadv_dev901_linux_x86-64.tar.gz

# The MQ packages to install
ARG MQ_PACKAGES="MQSeriesRuntime-*.rpm MQSeriesServer-*.rpm MQSeriesMsg*.rpm MQSeriesJava*.rpm MQSeriesJRE*.rpm MQSeriesGSKit*.rpm MQSeriesClient-*.rpm MQSeriesMan-*.rpm MQSeriesSamples-*.rpm"

RUN export DEBIAN_FRONTEND=noninteractive \
  && echo "mq:9.01" > /etc/debian_chroot \
  && apt-get update -y \
  && apt-get install -y --no-install-recommends \
    bash \
    bc \
    coreutils \
    curl \
    debianutils \
    findutils \
    gawk \
    grep \
    libc-bin \
    mount \
    passwd \
    procps \
    rpm \
    sed \
    tar \
    netcat \
    net-tools \
    iputils-ping \
    util-linux \
  && mkdir -p /tmp/mq \
  && cd /tmp/mq \
  && curl -LO \$MQ_URL \
  && tar -zxvf ./*.tar.gz \
  && groupadd --gid 1000 $PERFORMANCE_USER_GRP \
  && usermod -G $PERFORMANCE_USER_GRP root \
  && useradd --uid 1000 --gid $PERFORMANCE_USER_GRP --home-dir /var/$PERFORMANCE_USER_GRP $PERFORMANCE_USER \
  && echo "${PERFORMANCE_USER}:${PERFORMANCE_USER_PW}" | chpasswd \
  && cd /tmp/mq/MQServer \
  && ./mqlicense.sh -text_only -accept \
  && rpm -ivh --force-debian \$MQ_PACKAGES \
  && /opt/mqm/bin/setmqinst -p /opt/mqm -i \
  && rm -rf /tmp/mq \
  && rm -rf /var/lib/apt/lists/*
EOF
   echo_my "<------ Vanilla MQ server Dockerfile is created"
}

##############################################################################
# Generate Dockerfile for MQ server image with my specific settings
# Parameters:
#   1 - Path to the file
##############################################################################
createMQServerDockerfile() {
  echo_my "------> This function creates server Dockerfile in this directory: $1"
  BACKUP=Dockerfile.`date +%s`.bak
  NEW_FILE=$1/Dockerfile
  #if [ -f "$1/Dockerfile" ]; then mv -f $NEW_FILE $1/$BACKUP; fi

  cat <<EOF >${NEW_FILE}
# © Copyright IBM Corporation 2015, 2016
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0. Unless required by applicable law or agreed
# to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF 
# ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
#
# WARNING: This file is auto-generated by the build.sh script

FROM ${MQ_VANILLA_IMAGE}

COPY *.sh ${EXEC_DIR}/
COPY $TEMP/* ${EXEC_DIR}/
RUN chmod +x ${EXEC_DIR}/*.sh
COPY *.mqsc /etc/mqm/

# Expose internal MQ listener port to the outside world
EXPOSE $MQ_INSIDE_PORT

# Always put the MQ data directory in a Docker volume
VOLUME $MQ_DATA_DIR

ENTRYPOINT ["mq.sh"]
EOF
   echo_my "<------ MQ server Dockerfile is created"
}

##############################################################################
# Generate Dockerfile for the MQ client image
#
# Parameters
# 1 - Path to the file
##############################################################################
createMQClientDockerfile() {
	echo_my "------> This function creates client Dockerfile in this directory: $1"
	BACKUP=Dockerfile.`date +%s`.bak
	NEW_FILE=$1/Dockerfile
	#if [ -f "$1/Dockerfile" ]; then mv -f ${NEW_FILE} $1/${BACKUP}; fi

  cat <<EOF >${NEW_FILE}
# © Copyright IBM Corporation 2015, 2016
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0. Unless required by applicable law or agreed
# to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF 
# ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
#
# WARNING: This file is auto-generated by the build.sh script

FROM ${MQ_VANILLA_IMAGE}

COPY *.sh ${EXEC_DIR}/
COPY $TEMP/* ${EXEC_DIR}/
RUN chmod +x ${EXEC_DIR}/*.sh
RUN mkdir ${PERFHARNESS_PATH}
COPY $TEMP/${PERFHARNESS_JAR} ${PERFHARNESS_PATH}
RUN mkdir ${EXEC_DIR}/messages
COPY messages/* ${EXEC_DIR}/messages/

# Always put the MQ data directory in a Docker volume
VOLUME ${LOG_DIR}

EOF
   echo_my "<------ MQ client Dockerfile is created"
}

##############################################################################
# Remove all files that were temporarily needed for building the Docker image
#
# Parameters
# 1 - Path to the file
##############################################################################
copy_server_downloads() {
  if [ ! -d "$1/$TEMP" ]; then mkdir $1/$TEMP; fi
  cp ${PROJECT_HOME}/../downloads/q $1/$TEMP
  cp ${PROJECT_HOME}/setenv.sh $1/$TEMP
  cp ${PROJECT_HOME}/echo_my.sh $1/$TEMP
#  cp ${PROJECT_HOME}/mq/server/setenv_mq.sh $1/$TEMP
  cp ${PROJECT_HOME}/mq/client/setenv_client.sh $1/$TEMP
}	

##############################################################################
# Remove all files that were temporarily needed for building the Docker image
# Parameters
# 1 - Path to the file
##############################################################################
remove_server_downloads() {
  rm -rf $1/$TEMP
}	

##############################################################################
# Remove all files that were temporarily needed for building the Docker image
#
# Parameters
# 1 - Path to the file
##############################################################################
copy_client_downloads() {
  if [ ! -d "$1/$TEMP" ]; then mkdir $1/$TEMP; fi
	cp ${PROJECT_HOME}/../downloads/perfharness.jar $1/$TEMP
  cp ${PROJECT_HOME}/setenv.sh $1/$TEMP
  cp ${PROJECT_HOME}/echo_my.sh $1/$TEMP
  cp ${PROJECT_HOME}/mq/server/setenv_mq.sh $1/$TEMP
}	

##############################################################################
# Remove all files that were temporarily needed for building the Docker image
# Parameters
# 1 - Path to the file
##############################################################################
remove_client_downloads() {
  rm -rf $1/$TEMP
} 

##############################################################################
# Build MQ server Docker image
##############################################################################
build_vanilla_server() {
  # Optional - get the IBM official image
  # docker pull ibmcom/mq

  # Instead of getting an IBM official image, build my own server image
  CONFIG=vanilla_server
  createVanillaMQServerDockerfile $CONFIG
  docker build --tag $MQ_VANILLA_IMAGE ./$CONFIG/
} 

##############################################################################
# Build MQ server Docker image
##############################################################################
build_mq_server() {
  # Customize my own image
  CONFIG=server
  createMQServerDockerfile $CONFIG
  copy_server_downloads $CONFIG
  docker build --tag $MQ_IMAGE ./$CONFIG/
  remove_server_downloads $CONFIG
} 

##############################################################################
# Build MQ client Docker image
##############################################################################
build_mq_client() {
  CONFIG=client
  createMQClientDockerfile $CONFIG
  copy_client_downloads $CONFIG
  docker build --tag $MQ_CLIENT_IMAGE ./$CONFIG/
  remove_client_downloads $CONFIG
} 

##############################################################################
# MAIN
##############################################################################

#build_vanilla_server
#build_mq_server
#build_mq_client

echo_my "<-- '$BASH_SOURCE' <--" $ECHO_DEBUG